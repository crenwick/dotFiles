[user]
    name = Charles Renwick
    email = charles.srenwick@gmail.com

[github]
    user = crewnick

[credential]
    helper = osxkeychain

[column]
    ui = auto

[branch]
    # set up 'git pull' to rebase instead of merge
    autosetuprebase = always
    sort = -committerdate

[tag]
    sort = version:refname

[init]
    defaultBranch = main

[diff]
    algorithm = histogram
    colorMoved = plain
    mnemonicPrefix = true
    followTags = true

[push]
    # push will only do the current branch, not all branches
    default = current
    autoSetupRemote = true
    followTags = true

[fetch]
    prune = true
    pruneTags = true
    all = true

[help]
    autocorrect = prompt

[commit]
    verbose = true

[rerere]
    enabled = true
    autoupdate = true

[core]
    excludefiles = ~/.gitignore_global
    editor = nvim

[rebase]
    autoSquash = true
    autoStash = true
    updateRefs = true

[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto

[color "branch"]
    current = green bold
    local = green
    remote = red bold

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red

[color "sh"]
    branch = yellow

[pretty]
    oneLiner = format:%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset
    grokGraph = format:%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\


[alias]
    s = status --short --branch
    c = commit
    co = checkout
    sub = submodule
    br = branch -v
    dt = difftool --no-prompt

    # dotfile mgmt (https://mitxela.com/projects/dotfiles_management)
    dotfiles = "!git --git-dir ~/.dotfiles/.git --work-tree=$HOME"
    df = dotfiles

    aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /' | sort
    short = log -1 --pretty=format:%h

    # show the last tag
    lt = describe --tags --abbrev=0

    # show a pretty log graph
    l = log --graph --abbrev-commit --date=relative --pretty=oneLiner

    # graphic log
    grok = log --graph --abbrev-commit --decorate --all --pretty=grokGraph

    # attach any staged files onto the last created commit.
    commend = commit --amend --no-edit

    # both initialize your repository and creates an empty root commit in one quick step.
    it = !git init && git commit -m “root” --allow-empty

